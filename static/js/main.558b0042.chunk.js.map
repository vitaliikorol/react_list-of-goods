{"version":3,"sources":["Start.js","App.js","index.js"],"names":["Start","state","isVisible","goods","props","wordLength","selectedWordLength","handleStart","setState","handleReverse","reverse","handleSortAlphabetically","sort","handleSortByLength","a","b","length","handleReset","handleDefineLength","event","target","value","unpackList","filter","el","map","key","type","onClick","onChange","index","this","React","PureComponent","goodsFromServer","App","className","ReactDOM","render","document","getElementById"],"mappings":"4OA2GeA,E,4MAvGbC,MAAQ,CACNC,WAAW,EACXC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxCC,mBAAoB,G,EAGtBC,YAAc,WACZ,EAAKC,SAAS,CAAEN,WAAW,K,EAG7BO,cAAgB,WACd,EAAKD,UAAS,gBAAGL,EAAH,EAAGA,MAAH,MACZ,CACEA,MAAO,YAAIA,GAAOO,e,EAKxBC,yBAA2B,WACzB,EAAKH,UAAS,gBAAGL,EAAH,EAAGA,MAAH,MACZ,CACEA,MAAO,YAAIA,GAAOS,Y,EAKxBC,mBAAqB,WACnB,EAAKL,UAAS,gBAAGL,EAAH,EAAGA,MAAH,MACZ,CACEA,MAAO,YAAIA,GAAOS,MAAK,SAACE,EAAGC,GAAJ,OACrBD,EAAEE,OAASD,EAAEC,e,EAMrBC,YAAc,WACZ,EAAKT,UAAS,cAAGL,MAAH,EAAUG,mBAAV,MACZ,CACEH,MAAM,YAAK,EAAKC,MAAMD,OACtBG,mBAAoB,O,EAK1BY,mBAAqB,SAACC,GACpB,EAAKX,SAAS,CAAEF,mBAAoBa,EAAMC,OAAOC,S,EAGnDC,WAAa,WAAO,IAAD,EACiC,EAAKrB,MAA/CI,EADS,EACTA,WAAYF,EADH,EACGA,MAAOG,EADV,EACUA,mBAE3B,OACE,oCACE,4BACGH,EAAMoB,QAAO,SAAAC,GAAE,OAAIA,EAAGR,QAAUV,KAAoBmB,KAAI,SAAAD,GAAE,OACzD,wBAAIE,IAAKF,GAAKA,OAGlB,4BAAQG,KAAK,SAASC,QAAS,EAAKnB,eAApC,WACA,4BACEkB,KAAK,SACLC,QAAS,EAAKjB,0BAFhB,uBAMA,4BACEgB,KAAK,SACLC,QAAS,EAAKf,oBAFhB,kBAMA,4BAAQc,KAAK,SAASC,QAAS,EAAKX,aAApC,SACA,4BACEY,SAAU,EAAKX,mBACfG,MAAOf,GAEND,EAAWoB,KAAI,SAACD,EAAIM,GAAL,OACd,4BAAQJ,IAAKF,GAAKM,EAAQ,S,uDAO1B,IACA5B,EAAc6B,KAAK9B,MAAnBC,UAER,OACE,qCACIA,GACC,4BAAQyB,KAAK,SAASC,QAASG,KAAKxB,aAApC,SACFL,GAAa6B,KAAKT,kB,GA9FPU,IAAMC,eCCpBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcaC,E,uKATX,OACE,yBAAKC,UAAU,OACb,qCACA,kBAAC,EAAD,CAAOjC,MAAO+B,S,GALJF,IAAMC,eCbxBI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.558b0042.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Start extends React.PureComponent {\n  state = {\n    isVisible: false,\n    goods: [...this.props.goods],\n    wordLength: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    selectedWordLength: 1,\n  }\n\n  handleStart = () => {\n    this.setState({ isVisible: true });\n  }\n\n  handleReverse = () => {\n    this.setState(({ goods }) => (\n      {\n        goods: [...goods].reverse(),\n      }\n    ));\n  }\n\n  handleSortAlphabetically = () => {\n    this.setState(({ goods }) => (\n      {\n        goods: [...goods].sort(),\n      }\n    ));\n  }\n\n  handleSortByLength = () => {\n    this.setState(({ goods }) => (\n      {\n        goods: [...goods].sort((a, b) => (\n          a.length - b.length\n        )),\n      }\n    ));\n  }\n\n  handleReset = () => {\n    this.setState(({ goods, selectedWordLength }) => (\n      {\n        goods: [...this.props.goods],\n        selectedWordLength: 1,\n      }\n    ));\n  }\n\n  handleDefineLength = (event) => {\n    this.setState({ selectedWordLength: event.target.value });\n  }\n\n  unpackList = () => {\n    const { wordLength, goods, selectedWordLength } = this.state;\n\n    return (\n      <>\n        <ul>\n          {goods.filter(el => el.length >= selectedWordLength).map(el => (\n            <li key={el}>{el}</li>\n          ))}\n        </ul>\n        <button type=\"button\" onClick={this.handleReverse}>Reverse</button>\n        <button\n          type=\"button\"\n          onClick={this.handleSortAlphabetically}\n        >\n          Sort Alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleSortByLength}\n        >\n          Sort by Length\n        </button>\n        <button type=\"button\" onClick={this.handleReset}>Reset</button>\n        <select\n          onChange={this.handleDefineLength}\n          value={selectedWordLength}\n        >\n          {wordLength.map((el, index) => (\n            <option key={el}>{index + 1}</option>\n          ))}\n        </select>\n      </>\n    );\n  }\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <>\n        {!isVisible\n        && <button type=\"button\" onClick={this.handleStart}>Start</button>}\n        {isVisible && this.unpackList()}\n      </>\n    );\n  }\n}\n\nStart.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default Start;\n","import React from 'react';\nimport './App.css';\nimport Start from './Start';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <Start goods={goodsFromServer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}